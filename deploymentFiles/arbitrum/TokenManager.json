{
  "network": "arbitrum",
  "updatedAt": "2024-04-13T11:32:56.532Z",
  "gitSHA": "c9914ab",
  "contract": {
    "name": "TokenManager",
    "address": "0x2940FcBb3C32901Df405da0E96fd97D1E2a53f34",
    "signerAddress": "0x9506Ea24038609679732855F757041a3C1C06623",
    "abi": [
      "constructor()",
      "error DepositTooLarge(uint256 deposit, uint256 maximumDeposit)",
      "error DepositTooSmall(uint256 deposit, uint256 minimumDeposit)",
      "error FeeRateOutOfBounds(uint256 feeRate)",
      "error InsufficientTokenBalance(uint256 balance, uint256 amount)",
      "error NotDLCAdmin()",
      "error NotDLCManagerContract()",
      "error NotOwner()",
      "error NotPauser()",
      "error NotWhitelisted()",
      "event Burn(address from, uint256 amount)",
      "event CloseVault(bytes32 dlcUUID, address owner)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event Initialized(uint8 version)",
      "event Mint(address to, uint256 amount)",
      "event NewDLCManagerContract(address newDLCManagerAddress)",
      "event Paused(address account)",
      "event PostCloseDLCHandler(bytes32 dlcUUID, string btcTxId, address owner)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetBtcFeeRecipient(string btcFeeRecipient)",
      "event SetBtcMintFeeRate(uint256 newBtcMintFeeRate)",
      "event SetBtcRedeemFeeRate(uint256 newBtcRedeemFeeRate)",
      "event SetMaximumDeposit(uint256 newMaximumDeposit)",
      "event SetMinimumDeposit(uint256 newMinimumDeposit)",
      "event SetStatusFunded(bytes32 dlcUUID, string btcTxId, address owner)",
      "event SetWhitelistingEnabled(bool isWhitelistingEnabled)",
      "event SetupVault(bytes32 dlcUUID, uint256 btcDeposit, address owner)",
      "event TransferTokenContractOwnership(address newOwner)",
      "event Unpaused(address account)",
      "event UnwhitelistAddress(address addressToUnWhitelist)",
      "event WhitelistAddress(address addressToWhitelist)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DLC_ADMIN_ROLE() view returns (bytes32)",
      "function DLC_MANAGER_ROLE() view returns (bytes32)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function blacklistOnTokenContract(address account)",
      "function btcFeeRecipient() view returns (string)",
      "function btcMintFeeRate() view returns (uint256)",
      "function btcRedeemFeeRate() view returns (uint256)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function closeVault(bytes32 uuid)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function dlcBTC() view returns (address)",
      "function dlcManager() view returns (address)",
      "function getAllVaultUUIDsForAddress(address owner) view returns (bytes32[])",
      "function getAllVaultsForAddress(address owner) view returns (tuple(bytes32 uuid, address protocolContract, uint256 timestamp, uint256 valueLocked, address creator, uint8 status, string fundingTxId, string closingTxId, string btcFeeRecipient, uint256 btcMintFeeBasisPoints, uint256 btcRedeemFeeBasisPoints, string taprootPubKey)[])",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getVault(bytes32 uuid) view returns (tuple(bytes32 uuid, address protocolContract, uint256 timestamp, uint256 valueLocked, address creator, uint8 status, string fundingTxId, string closingTxId, string btcFeeRecipient, uint256 btcMintFeeBasisPoints, uint256 btcRedeemFeeBasisPoints, string taprootPubKey))",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address defaultAdmin, address dlcAdminRole, address dlcManagerAddress, address tokenContract, string btcFeeRecipientToSet)",
      "function maximumDeposit() view returns (uint256)",
      "function minimumDeposit() view returns (uint256)",
      "function owner() view returns (address)",
      "function pauseContract()",
      "function paused() view returns (bool)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function postCloseDLCHandler(bytes32 uuid, string btcTxId)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function setBtcFeeRecipient(string btcFeeRecipientToSet)",
      "function setBtcMintFeeRate(uint256 newBtcMintFeeRate)",
      "function setBtcRedeemFeeRate(uint256 newBtcRedeemFeeRate)",
      "function setBurnerOnTokenContract(address burner)",
      "function setMaximumDeposit(uint256 newMaximumDeposit)",
      "function setMinimumDeposit(uint256 newMinimumDeposit)",
      "function setMinterOnTokenContract(address minter)",
      "function setStatusFunded(bytes32 uuid, string btcTxId)",
      "function setWhitelistingEnabled(bool isWhitelistingEnabled)",
      "function setupVault(uint256 btcDeposit) returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferTokenContractOwnership(address newOwner)",
      "function unblacklistOnTokenContract(address account)",
      "function unpauseContract()",
      "function unwhitelistAddress(address addressToUnWhitelist)",
      "function updateDLCManagerContract(address newDLCManagerAddress)",
      "function userVaults(address, uint256) view returns (bytes32)",
      "function whitelistAddress(address addressToWhitelist)",
      "function whitelistingEnabled() view returns (bool)"
    ]
  }
}
