{
  "network": "hardhat",
  "contract": {
    "name": "DlcBroker",
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "signerAddress": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "abi": [
      "constructor(address _dlcManagerAddress, address _dlcNftAddress)",
      "event BurnBtcNft(bytes32 dlcUUID, uint256 nftId)",
      "event MintBtcNft(bytes32 dlcUUID, uint256 btcDeposit)",
      "event SetupVault(bytes32 dlcUUID, uint256 btcDeposit, uint256 emergencyRefundTime, uint256 index, address owner)",
      "event StatusUpdate(uint256 vaultid, bytes32 dlcUUID, uint8 newStatus)",
      "function closeVault(uint256 _vaultID) @29000000",
      "function getAllVaultsForAddress(address _addy) view returns (tuple(uint256 id, bytes32 dlcUUID, uint8 status, uint256 vaultCollateral, uint256 nftId, address owner)[]) @29000000",
      "function getBtcPriceCallback(bytes32 uuid, int256 price, uint256 timestamp) @29000000",
      "function getVault(uint256 _vaultID) view returns (tuple(uint256 id, bytes32 dlcUUID, uint8 status, uint256 vaultCollateral, uint256 nftId, address owner)) @29000000",
      "function getVaultByUUID(bytes32 _uuid) view returns (tuple(uint256 id, bytes32 dlcUUID, uint8 status, uint256 vaultCollateral, uint256 nftId, address owner)) @29000000",
      "function index() view returns (uint256) @29000000",
      "function postCloseDLCHandler(bytes32 _uuid) @29000000",
      "function postCreateDLCHandler(bytes32 _uuid) @29000000",
      "function postMintBtcNft(bytes32 _uuid, uint256 _nftId) @29000000",
      "function setStatusFunded(bytes32 _uuid) @29000000",
      "function setupVault(uint256 btcDeposit, uint256 emergencyRefundTime) returns (uint256) @29000000",
      "function vaultIDsByUUID(bytes32) view returns (uint256) @29000000",
      "function vaults(uint256) view returns (uint256 id, bytes32 dlcUUID, uint8 status, uint256 vaultCollateral, uint256 nftId, address owner) @29000000",
      "function vaultsPerAddress(address) view returns (uint256) @29000000"
    ]
  }
}
